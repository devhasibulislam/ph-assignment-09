[
    {
        "id": 1,
        "question": "What is Context API or describe purpose of Context API?",
        "answer": "In React we usually send data from one component to another. In that case the data of one component has to be sent to another child component as props. Often the situation is that the child component is much lower than our main component where your data is. That means that data component has another child component, again that child component has another child component. There may be many children doing this. Now if we want to take data from the main component or what we call top level component to a child component below many levels, then we have to take all the help from the parent of that child component and the parent of that parent to the data component or up to the top level component. It can be said to be like digging up data. We usually use Redux in such situations. Or the situation may be more complicated than that. In that case we have a global status that any child can access later if they want, without having to pass all the components as props and take data."
    },
    {
        "id": 2,
        "question": "what is semantic tags?",
        "answer": "HTML5 semantic elements support all modern browsers. <article> is used to define articles <aside> is commonly used for sidebars <bdi> Used to express text in a different direction format The <command> command button is used to define <details> Additional details are used to show or hide the user <dialog> Used to define dialog boxes or windows <summary> <details> is used to display the gist of the material <figure> Self-contained content for drawings diagrams, pictures, code lists, etc. Captions are used for the <figcaption> <figure> element<footer> is used to define footer for a section<header> is used to define a header for a section <hgroup> refers to a set of elements from <h1> to <h6> when there are multiple headings <mark> Used to define marked / highlighted text <meter> is used to define scale measurements within a known range <nav> Used to define navigation links <progress> represents a task progress <ruby> Ruby is used to define notes <rt> Used to define an interpretation / pronunciation of a letter <rp> Used to show in browsers that Ruby does not support annotations <section> Used to define a chapter in a document <time> Used to display date / time <wbr> Used for line breaks <audio> is used to add words <video> Used to add videos Used to add multiple media resources for <source> <video> and <audio> <embed> A container for an external application or interactive content Used to define text songs for <track> <video> and <audio> <canvas> Used to draw graphics <datalist> Specifies a list of predefined options for input control The <keygen> key is used for pair generators <output> is used to explain the result of the calculation. Possible combinations are included here. Tags define HTML elements for markups in terms of browser of modern style approach."
    },
    {
        "id": 3,
        "question": "What is the difference between Inline Block and Block elements?",
        "answer": "The inline-level elements need no new line is required to start the inline element and this element will only occupy the width as required. Inside the paragraph element <span> is an inline element. Example of inline element: <span> (Span element) <a> (Anchor element) <img> (image element) but using 'Inline-Block' make the inline element to behave like a block element and The block-level element always starts with a new line. Occupies the full width of that line (extending from left to right as much as possible). <div> A block-level element Example of block-level element: <div> (div element) <h1> - <h6> (Heading Element) <p> (paragraph element) <form> (form element). Long story short: inline-block elements contain only require spaces where block elements contain the whole area as needed or not."
    }
]